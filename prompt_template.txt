異なる複数のフォーマットからなるcsvファイルを一つのフォーマットに統合したい。複数ファイルのうち、一つをmaster.csvとして、残りをslave[n].csvとする。このとき[n]は1以上の数字を想定する。
入力[input]としてmaster.csvとslave[n].csvを与えるので[rule]以下のルールに基づき、mapping_rules.jsonを作成してほしい。

[input]
[[INPUT]]

[rule]
1) 以下[input ex]のようにmaster.csvとslave[n].csvが与えられた場合、[output ex]のようなmapping_rules.jsonを出力する。
ここで注意してほしいのはそのような変換プログラムの作成ではなく、jsonファイル作成の依頼であるということ。
2) csvの項目名とデータの内容から、masterとslaveの項目の対応関係を推測し、同じと思われるmasterの項目１つと配列で与えられるslave[n]の項目の対応関係をjsonファイルにする。
3) masterの項目は必ず対応関係の配列の1番目に追加しておく。
4) 対応関係の配列に重複する項目は必要ない。
5) slaveに存在し、masterには存在しない項目は捨てて良い。
6) masterには存在し、slaveには存在しない項目は対応関係の配列に記載しなくてよい。
7) master.csvに存在する項目が、対応関係の配列で2番目以降に出現する場合、その項目は対応関係の配列から除外する。
8) 以下に示すのは１例であって、必要なのはrule 1〜7で示されたルールを厳守し、[input]の方で提示しているmasterの各項目へのslave[n]の対応関係を漏らさずmapping_rules.jsonとして出力することである。

[input ex]
master.csv
---
"施設種別","保育園名","所在地"
"認可保育園","芝保育園","東京都港区芝五丁目18番1号101"
"認可保育園","神明保育園","東京都港区浜松町一丁目6番7号　プラザ神明1～3階"
---

slave1.csv
---
名称,住所,
あずさわ児童館,板橋区小豆沢3-9-2-103
---

slave2.csv
---
施設名称,所在地,
子ども家庭支援センター「こどものへや」,江戸川区船堀4丁目2番5号　勤労福祉会館内1階
---

[output ex]
mapping_rules.json
---
{
    "保育園名":[
        "保育園名",
        "施設名",
        "施設名称"
    ],
    "所在地":[
        "所在地",
        "住所",
    ]
}
---

